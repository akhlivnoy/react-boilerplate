{
  //* Functional components
  "Functional arrow component": {
    "scope": "typescriptreact",
    "prefix": "fac",
    "body": [
      "export const ${1:$TM_FILENAME_BASE}$2: React.ComponentType = () => {",
      "\tconsole.log('$TM_FILENAME_BASE component');\n",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${0:<p>$TM_FILENAME_BASE</p>}",
      "\t\t</div>",
      "\t);\n};\n"
    ],
    "description": "Creates and exports a functional arrow component with a file name"
  },
  "Functional arrow page": {
    "scope": "typescriptreact",
    "prefix": "page",
    "body": [
      "import { useEffect } from 'react';\n",
      "export const ${TM_FILENAME_BASE}Page: React.ComponentType = () => {",
      "\tuseEffect(() => {",
      "\t\tconsole.log('${TM_FILENAME_BASE}Page mounted');\n\t});\n",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t${0:<p>$TM_FILENAME_BASE Page</p>}",
      "\t\t</div>",
      "\t);\n};\n"
    ],
    "description": "Creates and exports a functional arrow component with a file name"
  },

  //* Hooks
  "useState": {
    "scope": "typescriptreact",
    "prefix": "useState",
    "body": ["const [$1, set${1/(.*)/${1:/capitalize}/}] = useState$2(${3:null});"],
    "description": "Hook useState"
  },
  "useCallback": {
    "scope": "typescriptreact",
    "prefix": "useCallback",
    "body": ["const ${1:name} = useCallback$2(($3) => {\n\t$0\n},[]);"],
    "description": "Hook useCallback"
  },
  "useEffect": {
    "scope": "typescriptreact",
    "prefix": "useEffect",
    "body": ["useEffect$1(() => {\n\t$0\n},[]);"],
    "description": "Hook useEffect"
  },
  "useMemo": {
    "scope": "typescriptreact",
    "prefix": "useMemo",
    "body": ["const ${1:name} = useMemo$2(() => {\t\n$0\n}, []);"],
    "description": "Hook useMemo"
  }
}
